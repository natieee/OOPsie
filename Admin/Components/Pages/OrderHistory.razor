@page "/order-history"
@layout Admin.Components.Layout.MainLayout

<div class="page-container">
    <h2 class="page-title">⏰ Order History</h2>

    <table class="order-table">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Customer</th>
                <th>Items</th>
                <th>Total</th>
                <th>Status</th>
                <th>Out for Delivery</th>
                <th>Time Delivered</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.Customer</td>
                    <td>@order.Items</td>
                    <td>₱@order.Total.ToString("N2")</td>
                    <td>
                        <span class="@GetStatusClass(order.Status)">@order.Status</span>
                    </td>
                    <td>@(order.OutForDelivery?.ToString("yyyy-MM-dd HH:mm") ?? "—")</td>
                    <td>@(order.TimeDelivered?.ToString("yyyy-MM-dd HH:mm") ?? "—")</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<OrderModel> orders = new();

    protected override void OnInitialized()
    {
        orders = new List<OrderModel>
        {
            new() {
                Id = "ORD-001",
                Customer = "Anna Cruz",
                Items = "2x Round Gallons",
                Total = 240.00m,
                Status = "Delivered",
                OutForDelivery = new DateTime(2025, 9, 30, 9, 15, 0),
            },
            new() {
                Id = "ORD-002",
                Customer = "Marco Diaz",
                Items = "1x Slim Gallon",
                Total = 120.00m,
                Status = "Processing",
                OutForDelivery = new DateTime(2025, 10, 2, 11, 30, 0),
            },
            new() {
                Id = "ORD-003",
                Customer = "Jessa Flores",
                Items = "3x Round Gallons",
                Total = 360.00m,
                Status = "Pending"
            }
        };

        // Auto-calculate delivered time (+1 hour)
        foreach (var o in orders)
        {
            if (o.Status == "Delivered" && o.OutForDelivery.HasValue)
                o.TimeDelivered = o.OutForDelivery.Value.AddHours(1);
        }

        // Sort newest first
        orders = orders.OrderByDescending(o => o.OutForDelivery ?? o.TimeDelivered ?? DateTime.MinValue).ToList();
    }

    private string GetStatusClass(string status) => status switch
    {
        "Delivered" => "status-delivered",
        "Processing" => "status-processing",
        "Pending" => "status-pending",
        _ => ""
    };

    public class OrderModel
    {
        public string Id { get; set; } = "";
        public string Customer { get; set; } = "";
        public string Items { get; set; } = "";
        public decimal Total { get; set; }
        public string Status { get; set; } = "";
        public DateTime? OutForDelivery { get; set; }
        public DateTime? TimeDelivered { get; set; }
    }
}

<style>
.page-container {
    padding: 2rem;
    color: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    height: 100%;
    margin: 0;
    overflow-y: auto;
    background: rgba(255, 255, 255, 0.04);
    backdrop-filter: blur(10px);
    background-image: url('/images/water-bg.jpg');
    background-size: cover;
    background-position: center;
}

.page-title {
    margin-bottom: 1.5rem;
    font-size: 1.8rem;
}

.order-table {
    width: 90%;
    max-width: 1100px;
    border-collapse: collapse;
    text-align: center;
    background: rgba(255,255,255,0.9);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0,0,0,0.3);
    margin: 0;
}

.order-table th, .order-table td {
    padding: 1rem;
    color: #002f5f;
}

.order-table th {
    background: #007acc;
    color: white;
    font-weight: bold;
    text-transform: uppercase;
}

.order-table tr:nth-child(even) {
    background: rgba(0, 0, 0, 0.03);
}

.order-table tr:hover {
    background: rgba(0, 122, 204, 0.08);
}

/* Status Styles */
.status-delivered {
    color: #155724;
    background: #d4edda;
    padding: 0.3rem 0.8rem;
    border-radius: 8px;
    font-weight: bold;
}

.status-processing {
    color: #856404;
    background: #fff3cd;
    padding: 0.3rem 0.8rem;
    border-radius: 8px;
    font-weight: bold;
}

.status-pending {
    color: #721c24;
    background: #f8d7da;
    padding: 0.3rem 0.8rem;
    border-radius: 8px;
    font-weight: bold;
}
</style>
